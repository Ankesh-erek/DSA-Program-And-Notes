MY CODE
--------------------------------------------------------------------
class Solution {
    public boolean isAnagram(String s, String t) {
       if (s.length() != t.length())
        return false;
       char [] ArrayS = s.toCharArray();
       char [] ArrayT = t.toCharArray();
       Arrays.sort(ArrayS);
       Arrays.sort(ArrayT);

       for(int i=0; i<ArrayS.length; i++){
        if(ArrayS[i]!=ArrayT[i])
        return false;
       } 
       return true;   
    }
}

Solution 
-------------------------------------------------------
class Solution {
    public boolean isAnagram(String s, String t) {
        
        if(s.length() != t.length()) return false;
        
        USING HASH

        // int[] map = new int[26]; // int[128] for ascii
        // for(int i = 0; i < s.length(); i++){
        //     map[s.charAt(i)-'a'] ++;
        // }

        // for(int i = 0; i < t.length(); i++){
        //     int c = t.charAt(i)-'a';
        //     // char not contains in map
        //     if(map[c] == 0) return false;
        //     map[c] --;
        // }

        // for(int i = 0; i < map.length; i++){
        //     if(map[i] != 0) return false;
        // }
        // return true;

        USING SORTING 

        char[] ss = s.toCharArray();
        char[] tt = t.toCharArray();
        Arrays.sort(ss);
        Arrays.sort(tt);
        return Arrays.equals(ss, tt);
    }
}

